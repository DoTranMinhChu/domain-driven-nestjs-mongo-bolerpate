<%_
  const toKebabCase = (str) =>
    str
      .replace(/([a-z0-9])([A-Z])/g, '$1-$2')
      .replace(/([A-Z])([A-Z][a-z])/g, '$1-$2')
      .toLowerCase();

  const Name = name.charAt(0).toUpperCase() + name.slice(1);
  const kebab = toKebabCase(name); 
  const camelCase = name.charAt(0).toLowerCase() + name.slice(1)
_%>
import { MongooseBaseService } from '@infrastructure/mongoose';
import { <%= Name %>Schema } from '@infrastructure/mongoose/schemas';
import { Inject, Injectable } from '@nestjs/common';
import { A<%= Name %>Repository } from '../repositories/<%= kebab %>.repository.abstract';

@Injectable()
export class <%= Name %>Service extends MongooseBaseService<<%= Name %>Schema> {
  constructor(
    @Inject(A<%= Name %>Repository)
    private readonly <%= camelCase %>Repository: A<%= Name %>Repository,
  ) {
    super(<%= camelCase %>Repository);
  }
}
