<%_
  const toKebabCase = (str) =>
    str
      .replace(/([a-z0-9])([A-Z])/g, '$1-$2')
      .replace(/([A-Z])([A-Z][a-z])/g, '$1-$2')
      .toLowerCase();

  const Name = name.charAt(0).toUpperCase() + name.slice(1);
  const kebab = toKebabCase(name); 
  const camelCase = name.charAt(0).toLowerCase() + name.slice(1)
_%>
import { <%= Name %>Repository } from '@infrastructure/mongoose/repositories';
import {
  <%= Name %>Schema,
  <%= Name %>SchemaFactory,
} from '@infrastructure/mongoose/schemas';
import { MongooseModule } from '@nestjs/mongoose';
import { Module } from '@nestjs/common';
import { A<%= Name %>Repository } from './repositories';
import { <%= Name %>Service } from './services';

@Module({
  imports: [
    MongooseModule.forFeature([
      { name: <%= Name %>Schema.name, schema: <%= Name %>SchemaFactory },
    ]),
  ],
  providers: [
    { provide: A<%= Name %>Repository, useClass: <%= Name %>Repository },
    <%= Name %>Service,
  ],
  exports: [A<%= Name %>Repository, <%= Name %>Service],
})
export class Domain<%= Name %>Module {}
