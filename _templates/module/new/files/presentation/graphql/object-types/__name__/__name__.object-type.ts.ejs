<%_
  const toKebabCase = (str) =>
    str
      .replace(/([a-z0-9])([A-Z])/g, '$1-$2')
      .replace(/([A-Z])([A-Z][a-z])/g, '$1-$2')
      .toLowerCase();

  const Name = name.charAt(0).toUpperCase() + name.slice(1);
  const kebab = toKebabCase(name); 
  const camelCase = name.charAt(0).toLowerCase() + name.slice(1)
_%>
import { Field, ObjectType } from '@nestjs/graphql';
import { MongooseBaseObjectType } from '@infrastructure/mongoose/mongoose-base';
import { PaginateDataObjectType } from '..';
import { Mixed } from '@presentation/graphql/scalar-types';

@ObjectType()
export class <%= Name %>ObjectType extends MongooseBaseObjectType {
  @Field(() => String)
  name!: string;
}

@ObjectType()
export class <%= Name %>PaginateObjectType extends PaginateDataObjectType(
  <%= Name %>ObjectType,
) {}
