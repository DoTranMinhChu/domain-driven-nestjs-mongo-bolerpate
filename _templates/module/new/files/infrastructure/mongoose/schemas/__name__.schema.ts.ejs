<%_
  const toKebabCase = (str) =>
    str
      .replace(/([a-z0-9])([A-Z])/g, '$1-$2')
      .replace(/([A-Z])([A-Z][a-z])/g, '$1-$2')
      .toLowerCase();

  const Name = name.charAt(0).toUpperCase() + name.slice(1);
  const kebab = toKebabCase(name); 
  const camelCase = name.charAt(0).toLowerCase() + name.slice(1)
_%>
import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';
import { Document } from 'mongoose';

@Schema({ timestamps: true, collection: '<%= kebab %>' })
export class <%= Name %>Schema extends Document {
  @Prop({})
  name!: string;
  // TODO: thÃªm props
}

export const <%= Name %>SchemaFactory = SchemaFactory.createForClass(<%= Name %>Schema);
<%= Name %>SchemaFactory.index({ name: 'text' }, { weights: { name: 1 } });
